#!/usr/bin/env bash

set -eo pipefail

GH_REPO="https://github.com/realm/SwiftLint"
ARTIFACTORY_REPO="https://repo.artifactory-dogen.group.echonet/artifactory/Swiftlint"

curl_opts=(-fsSL)

# If we find the "BNPP Root Interception Externe" certificate in Keychain,
# that mean we're in managed environmentâ€¦ so we use Artifactory,
# otherwise we use Github for our download.
if security find-certificate -c "BNPP Root Interception Externe" > /dev/null; then
	DOWNLOAD_BASE_URL=$ARTIFACTORY_REPO

	if [ -n "${HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN:-}" ]; then
		curl_opts=("${curl_opts[@]}" -H "Authorization: Basic $HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN")
	else
		echo "Please make sure that your mac is properly configured to access Artifactory:"
		echo "- https://bnpp-lbc.atlassian.net/wiki/spaces/RH/pages/4263739396"
		echo "- https://github.com/TMD-DX-Mobile/workstation-toolbox"
		exit 1
	fi
else
	DOWNLOAD_BASE_URL=$GH_REPO

	if [ -n "${GITHUB_API_TOKEN:-}" ]; then
		curl_opts=("${curl_opts[@]}" -H "Authorization: token $GITHUB_API_TOKEN")
	fi
fi

DOWNLOAD_URL="https://github.com/realm/SwiftLint/releases/download/$ASDF_INSTALL_VERSION/portable_swiftlint.zip"

# make a temporary download directory with a cleanup hook
readonly TMP_DOWNLOAD_DIR="$(mktemp -d -t "asdf_swiftlint_XXXXXX")"
trap 'rm -rf "${TMP_DOWNLOAD_DIR?}"' EXIT

SWIFTLINT_DOWNLOAD_PATH="$TMP_DOWNLOAD_DIR/swiftlint.zip"

# Download the zipped swiftlint file
mkdir -p "$ASDF_INSTALL_PATH/bin"
curl "${curl_opts[@]}" "$DOWNLOAD_BASE_URL/releases/download/$ASDF_INSTALL_VERSION/portable_swiftlint.zip" -o "$SWIFTLINT_DOWNLOAD_PATH" 2>/dev/null

# unzip swiftlint from the archive into the bin folder
unzip -o "$SWIFTLINT_DOWNLOAD_PATH" swiftlint -d "$ASDF_INSTALL_PATH/bin" >/dev/null
